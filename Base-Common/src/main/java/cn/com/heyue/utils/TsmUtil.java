package cn.com.heyue.utils;

import cn.com.heyue.nfc.response.TsmSynParaDetail;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;

import java.util.ArrayList;
import java.util.List;

public class TsmUtil {

	public static List<TsmSynParaDetail> toList(String src) throws Exception {
		List<TsmSynParaDetail> list = new ArrayList<TsmSynParaDetail>();
		String sourcePara = new String(RSAUtils.verifyWithRsa2ByPrivateKey(RSAUtils.decryptBASE64(src), NfcConstant.TSM_LOC_PRI_KEY));
		JSONArray array = JSONArray.parseArray(sourcePara);
		for(Object obj : array){
			TsmSynParaDetail tsmSynParaDetail = JSON.parseObject(obj.toString(),TsmSynParaDetail.class);
			list.add(tsmSynParaDetail);
		}
		return list;
	}

	public static void main(String[] args) throws Exception {
		String priKey = "MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCoiwORWzj36Y7Nk7z6sIn47MT38C4b/nA1xi3dNMxiaeMWJ/YcEJ+OyDIVdHJi7Z9gpmPzFSFlD2hqKAvbJI3aEd+jzIyZU3yMFXUMHGlqa0nN7FLJhCHvSK2N+fCuCy3l6YsY2VjoZQ0R/oVgmh/2IY7u9dQ1hOuwbhUCCtnI1XiQqTzJC5Oc+l77bgmbByV+t/pR1e+JW8waFQRoyyaZf9yGCRbvKgn4EexnY/NS5Zg9ycPxEvkGQ7bkx7Vi+jEXWVCXnvKVI1CsyYmUwIkLmayNsuXaH7M60HCKWJ54ZB8uGcenKqUs32KvgycOSwac9DVzExWhpTYIKH1sVSn9AgMBAAECggEBAIYQXbwnlb8NVvwLQk0eVAFfRKX7tJGr6FG93AmSz+iQVYPwMYHNbz3B3KTYRYyPezED6YkYC8I5aVLXm+aqwvLtOLkwIb5sfCtpffsuNmPiB4j3LDsDEYMminbekyW92rqA9JXFfUUN7EGd9TYMItRDiVBm1m/j1R430hoXy3hFmid8feIGSA6wi5t7A+2Po7zICLzPqCuT5Nrbd+ZYCegbMqLYYOYdZ7w9vMErMKtKKQ+BD16tm1/AJ4ivqESdrMtPro/TrlJvSwwqzuD+uOR6+0i8za1jajbPW4DiAzT/2CqSBEZ7RJN78rAH9onYOByldTQZvuz9nYtGuC3Ic3kCgYEA3sb4pdhJhcayLiG/pJra5cj8iHRk+M25GhKnT3530LglUMcev4vA8dSXpX2zk9Cp0VNgvPW+PDWWV4CYA/p2CVEmGw8zBq0DYMcbUJrr14Pbut3e3BfKIGSUz56nFpO7Jyd011RqwDNeR06ussku1Hldl7Qz+4z034jtp3idwEMCgYEAwa2HMdWZueWZyYbm15ilPp4cxPYe+mPtptktUoiFuBNwPPdshKJOen5rHgzwXxWDnsvLtd3P8wOOMUthg2cNl4eEKMv0JXh3AhRiCoVMrLi5EFxuwXigq+aE7PfYXXB0nS8Wt8SdF2AZIngzvZROzAUEDJgma9oSI4S9Cxqi6L8CgYBWp2aIe/z9QDCGqTH2QRXsU6WHHl84OC1L6v2Rekv4r+gz54AaWa4PYvYptR9o271yYtA6MAxzNxTnrGl1ArNvJFWCKQNcEWhC+K+zRs994RhTM4JAcjB5MSaBK+EqcwRVUo+sQnXTlSeS7RQfDwpcM2koXTvrGQUW/hgTEGOsKQKBgQCRH4jFE6urutpAQoAonm17fRhLkaxmrIf/1I38YOXpp08br741qDSr3pw/GSzn4oQMceKDtOBD1K8wSq6XuplZqKajtyeLCDgMa9+GyJlKduPc2ZX4DH5AMGv78D7EzSXkPcuFCaM4R76tsGn8rOtaPovpL/ziJbYfvS+16VCWmwKBgDsgWHT3TEr95t5DZxRuBqMNMI/Vusr29rj3LDiYTp8TiY1KbhRQgGz4PU2De8R+KdHpEG3i0VFOOoLtgS+yzwLOq0zWynRF2YKoZMjaqDwKLx+/H11AyHLW6yWE3Scg1W+yaxw0aGBaBKABENFvagGG1XFYxkvnj+Ge7XA9gsPY";
		String paraStr = "";
		String sourcePara = new String(RSAUtils.verifyWithRsa2ByPrivateKey(RSAUtils.decryptBASE64(paraStr),priKey));
		System.out.println(sourcePara);

		JSONArray array = JSONArray.parseArray(sourcePara);
		for(Object obj : array){
			TsmSynParaDetail tsmSynParaDetail = JSON.parseObject(obj.toString(),TsmSynParaDetail.class);
		}
	}
}
